// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  Session    Session[]
  Credential Credential[]
  Annotation Annotation[]
  Card       Card[]
  Wifi       Wifi[]
  @@map("users")
}

model Session {
  id        Int      @id @default(autoincrement())
  userId    Int
  token     String   @unique
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
  @@map("sessions")
}

model Credential {
  id          Int    @id @default(autoincrement())
  userId      Int
  title       String
  url         String
  userOrEmail String
  password    String

  user User @relation(fields: [userId], references: [id])
  @@unique(fields: [userId, title])
  @@map("credentials")
}

model Annotation {
  id     Int    @id @default(autoincrement())
  userId Int
  title  String @db.VarChar(50)
  note   String @db.VarChar(1000)

  user User @relation(fields: [userId], references: [id])
  @@unique(fields: [userId, title])
  @@map("annotations")
}

model Card {
  id             Int     @id @default(autoincrement())
  userId         Int
  title          String
  cardholderName String
  number         String
  securityCode   String
  expirationDate String
  password       String
  type           EnumCardTypes
  isVirtual      Boolean @default(false)

  user User @relation(fields: [userId], references: [id])
  @@unique(fields: [userId, title])
  @@map("cards")
}

model Wifi {
  id       Int    @id @default(autoincrement())
  userId   Int
  title    String
  network  String
  password String

  user User @relation(fields: [userId], references: [id])
  @@map("wifis")
}

enum EnumCardTypes {
  credit
  debit
  both
}